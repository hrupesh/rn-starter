{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"C:\\\\rn-starter\\\\src\\\\screens\\\\SquareScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useReducer } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ColorCounter from \"./ColorCounter\";\nvar THRESHOLD = 5;\n\nvar reducer = function reducer(state, action) {\n  switch (action.type) {\n    case \"change_red\":\n      return state.red + action.payload > 255 || state.red + action.payload < 0 ? state : _objectSpread(_objectSpread({}, state), {}, {\n        red: state.red + action.payload\n      });\n\n    case \"change_green\":\n      return state.green + action.payload > 255 || state.green + action.payload < 0 ? state : _objectSpread(_objectSpread({}, state), {}, {\n        green: state.green + action.payload\n      });\n\n    case \"change_blue\":\n      return state.blue + action.payload > 255 || state.blue + action.payload < 0 ? state : _objectSpread(_objectSpread({}, state), {}, {\n        blue: state.blue + action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default function SquareScreen() {\n  var _useReducer = useReducer(reducer, {\n    red: 0,\n    green: 0,\n    blue: 0\n  }),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var red = state.red,\n      green = state.green,\n      blue = state.blue;\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      height: \"50%\",\n      width: \"100%\",\n      backgroundColor: \"rgb(\" + red + \",\" + green + \",\" + blue + \")\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: styles.curVal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, \"RGB(\", red, \", \", green, \", \", blue, \")\"), React.createElement(ColorCounter, {\n    onAdd: function onAdd() {\n      return dispatch({\n        type: \"change_red\",\n        payload: THRESHOLD\n      });\n    },\n    onReduce: function onReduce() {\n      return dispatch({\n        type: \"change_red\",\n        payload: -THRESHOLD\n      });\n    },\n    color: \"Red\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }), React.createElement(ColorCounter, {\n    onAdd: function onAdd() {\n      return dispatch({\n        type: \"change_green\",\n        payload: THRESHOLD\n      });\n    },\n    onReduce: function onReduce() {\n      return dispatch({\n        type: \"change_green\",\n        payload: -THRESHOLD\n      });\n    },\n    color: \"Green\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }), React.createElement(ColorCounter, {\n    onAdd: function onAdd() {\n      return dispatch({\n        type: \"change_blue\",\n        payload: THRESHOLD\n      });\n    },\n    onReduce: function onReduce() {\n      return dispatch({\n        type: \"change_blue\",\n        payload: -THRESHOLD\n      });\n    },\n    color: \"Blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    textAlign: \"center\"\n  },\n  curVal: {\n    fontSize: 28,\n    letterSpacing: 4,\n    textAlign: \"center\",\n    backgroundColor: \"#212121\",\n    color: \"white\"\n  }\n});","map":{"version":3,"sources":["C:/rn-starter/src/screens/SquareScreen.js"],"names":["React","useReducer","ColorCounter","THRESHOLD","reducer","state","action","type","red","payload","green","blue","SquareScreen","dispatch","styles","container","height","width","backgroundColor","curVal","StyleSheet","create","textAlign","fontSize","letterSpacing","color"],"mappings":"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","sourcesContent":["import React, { useReducer } from \"react\";\r\nimport { StyleSheet, Text, View } from \"react-native\";\r\nimport ColorCounter from \"./ColorCounter\";\r\n\r\nconst THRESHOLD = 5;\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"change_red\":\r\n      return state.red + action.payload > 255 || state.red + action.payload < 0\r\n        ? state\r\n        : { ...state, red: state.red + action.payload };\r\n    case \"change_green\":\r\n      return state.green + action.payload > 255 ||\r\n        state.green + action.payload < 0\r\n        ? state\r\n        : { ...state, green: state.green + action.payload };\r\n    case \"change_blue\":\r\n      return state.blue + action.payload > 255 || state.blue + action.payload < 0\r\n        ? state\r\n        : { ...state, blue: state.blue + action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default function SquareScreen() {\r\n  const [state, dispatch] = useReducer(reducer, { red: 0, green: 0, blue: 0 });\r\n\r\n  const { red, green, blue } = state;\r\n\r\n  //   const validateColors = () => {\r\n  //     if (red > 255) {\r\n  //       setRed(255);\r\n  //     } else if (red < 0) {\r\n  //       setRed(0);\r\n  //     }\r\n\r\n  //     if (green > 255) {\r\n  //       setgreen(255);\r\n  //     } else if (green < 0) {\r\n  //       setgreen(0);\r\n  //     }\r\n\r\n  //     if (blue > 255) {\r\n  //       setblue(255);\r\n  //     } else if (blue < 0) {\r\n  //       setblue(0);\r\n  //     }\r\n  //   };\r\n\r\n  //   validateColors();\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View\r\n        style={{\r\n          height: \"50%\",\r\n          width: \"100%\",\r\n          backgroundColor: `rgb(${red},${green},${blue})`,\r\n        }}\r\n      ></View>\r\n      <Text style={styles.curVal}>\r\n        RGB({red}, {green}, {blue})\r\n      </Text>\r\n\r\n      <ColorCounter\r\n        onAdd={() => dispatch({ type: \"change_red\", payload: THRESHOLD })}\r\n        onReduce={() => dispatch({ type: \"change_red\", payload: -THRESHOLD })}\r\n        color=\"Red\"\r\n      />\r\n      <ColorCounter\r\n        onAdd={() => dispatch({ type: \"change_green\", payload: THRESHOLD })}\r\n        onReduce={() => dispatch({ type: \"change_green\", payload: -THRESHOLD })}\r\n        color=\"Green\"\r\n      />\r\n      <ColorCounter\r\n        onAdd={() => dispatch({ type: \"change_blue\", payload: THRESHOLD })}\r\n        onReduce={() => dispatch({ type: \"change_blue\", payload: -THRESHOLD })}\r\n        color=\"Blue\"\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    textAlign: \"center\",\r\n  },\r\n  curVal: {\r\n    fontSize: 28,\r\n    letterSpacing: 4,\r\n    textAlign: \"center\",\r\n    backgroundColor: \"#212121\",\r\n    color: \"white\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}