{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"C:\\\\rn-starter\\\\src\\\\screens\\\\CounterScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useReducer } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport { AntDesign } from \"@expo/vector-icons\";\n\nvar reducer = function reducer(state, action) {\n  switch (action.type) {\n    case \"add\":\n      return state.count + 1 > 100 ? state : _objectSpread(_objectSpread({}, state), {}, {\n        count: state.count + 1\n      });\n\n    case \"subtract\":\n      return state.count - 1 < 0 ? state : _objectSpread(_objectSpread({}, state), {}, {\n        count: state.count - 1\n      });\n\n    case \"got_to_max\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        count: 100\n      });\n\n    case \"go_to_min\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        count: 0\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default function CounterScreen() {\n  var _useReducer = useReducer(reducer, {\n    count: 0\n  }),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var count = state.count;\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableOpacity, {\n    activeOpacity: 0.8,\n    onLongPress: function onLongPress() {\n      return dispatch({\n        type: \"go_to_max\"\n      });\n    },\n    onPress: function onPress() {\n      return dispatch({\n        type: \"add\"\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, React.createElement(AntDesign, {\n    name: \"pluscircle\",\n    size: 100,\n    color: \"#333\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  })), React.createElement(Text, {\n    style: styles.count,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \" \", count, \" \"), React.createElement(TouchableOpacity, {\n    onLongPress: function onLongPress() {\n      return dispatch({\n        type: \"go_to_min\"\n      });\n    },\n    activeOpacity: 0.8,\n    onPress: function onPress() {\n      return dispatch({\n        type: \"subtract\"\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, React.createElement(AntDesign, {\n    name: \"minuscircle\",\n    size: 100,\n    color: \"#333\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#F5F5F5\"\n  },\n  count: {\n    fontSize: 150,\n    color: \"#000\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 50,\n      height: 50\n    },\n    shadowOpacity: 0.5,\n    shadowRadius: 3.84,\n    elevation: 10,\n    margin: 50,\n    textShadowColor: \"#222\",\n    textShadowOffset: {\n      width: 5,\n      height: 5\n    },\n    textShadowRadius: 10\n  }\n});","map":{"version":3,"sources":["C:/rn-starter/src/screens/CounterScreen.js"],"names":["React","useReducer","TouchableOpacity","AntDesign","reducer","state","action","type","count","CounterScreen","dispatch","styles","container","StyleSheet","create","flex","alignItems","justifyContent","backgroundColor","fontSize","color","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","margin","textShadowColor","textShadowOffset","textShadowRadius"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;;;;AAEA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,SAASC,SAAT,QAA0B,oBAA1B;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,KAAL;AACE,aAAOF,KAAK,CAACG,KAAN,GAAc,CAAd,GAAkB,GAAlB,GACHH,KADG,mCAEEA,KAFF;AAESG,QAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,GAAc;AAF9B,QAAP;;AAGF,SAAK,UAAL;AACE,aAAOH,KAAK,CAACG,KAAN,GAAc,CAAd,GAAkB,CAAlB,GAAsBH,KAAtB,mCAAmCA,KAAnC;AAA0CG,QAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,GAAc;AAA/D,QAAP;;AACF,SAAK,YAAL;AACE,6CAAYH,KAAZ;AAAmBG,QAAAA,KAAK,EAAE;AAA1B;;AACF,SAAK,WAAL;AACE,6CAAYH,KAAZ;AAAmBG,QAAAA,KAAK,EAAE;AAA1B;;AACF;AACE,aAAOH,KAAP;AAZJ;AAcD,CAfD;;AAiBA,eAAe,SAASI,aAAT,GAAyB;AAAA,oBACZR,UAAU,CAACG,OAAD,EAAU;AAAEI,IAAAA,KAAK,EAAE;AAAT,GAAV,CADE;AAAA;AAAA,MAC/BH,KAD+B;AAAA,MACxBK,QADwB;;AAAA,MAG9BF,KAH8B,GAGpBH,KAHoB,CAG9BG,KAH8B;AAqBtC,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEG,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AACE,IAAA,aAAa,EAAE,GADjB;AAEE,IAAA,WAAW,EAAE;AAAA,aAAMF,QAAQ,CAAC;AAAEH,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAd;AAAA,KAFf;AAGE,IAAA,OAAO,EAAE;AAAA,aAAMG,QAAQ,CAAC;AAAEH,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAd;AAAA,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,YAAhB;AAA6B,IAAA,IAAI,EAAE,GAAnC;AAAwC,IAAA,KAAK,EAAC,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF,EAQE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEI,MAAM,CAACH,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA6BA,KAA7B,MARF,EASE,oBAAC,gBAAD;AACE,IAAA,WAAW,EAAE;AAAA,aAAME,QAAQ,CAAC;AAAEH,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAd;AAAA,KADf;AAEE,IAAA,aAAa,EAAE,GAFjB;AAGE,IAAA,OAAO,EAAE;AAAA,aAAMG,QAAQ,CAAC;AAAEH,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAd;AAAA,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,aAAhB;AAA8B,IAAA,IAAI,EAAE,GAApC;AAAyC,IAAA,KAAK,EAAC,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CATF,CADF;AAmBD;AAED,IAAMI,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,SAAS,EAAE;AACTG,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,cAAc,EAAE,QAHP;AAITC,IAAAA,eAAe,EAAE;AAJR,GADoB;AAO/BV,EAAAA,KAAK,EAAE;AACLW,IAAAA,QAAQ,EAAE,GADL;AAELC,IAAAA,KAAK,EAAE,MAFF;AAGLC,IAAAA,WAAW,EAAE,MAHR;AAILC,IAAAA,YAAY,EAAE;AACZC,MAAAA,KAAK,EAAE,EADK;AAEZC,MAAAA,MAAM,EAAE;AAFI,KAJT;AAQLC,IAAAA,aAAa,EAAE,GARV;AASLC,IAAAA,YAAY,EAAE,IATT;AAULC,IAAAA,SAAS,EAAE,EAVN;AAWLC,IAAAA,MAAM,EAAE,EAXH;AAYLC,IAAAA,eAAe,EAAE,MAZZ;AAaLC,IAAAA,gBAAgB,EAAE;AAChBP,MAAAA,KAAK,EAAE,CADS;AAEhBC,MAAAA,MAAM,EAAE;AAFQ,KAbb;AAiBLO,IAAAA,gBAAgB,EAAE;AAjBb;AAPwB,CAAlB,CAAf","sourcesContent":["import React, { useReducer } from \"react\";\r\nimport { StyleSheet, Text, View, Alert } from \"react-native\";\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"add\":\r\n      return state.count + 1 > 100\r\n        ? state\r\n        : { ...state, count: state.count + 1 };\r\n    case \"subtract\":\r\n      return state.count - 1 < 0 ? state : { ...state, count: state.count - 1 };\r\n    case \"got_to_max\":\r\n      return { ...state, count: 100 };\r\n    case \"go_to_min\":\r\n      return { ...state, count: 0 };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default function CounterScreen() {\r\n  const [state, dispatch] = useReducer(reducer, { count: 0 });\r\n\r\n  const { count } = state;\r\n\r\n  // const increaseCount = () => {\r\n  //   if (count > 9) {\r\n  //     Alert.alert(\"Enough ðŸ›‘\", \"Counter has reached maximum limit.\");\r\n  //   } else {\r\n  //     setCount(count + 1);\r\n  //   }\r\n  // };\r\n\r\n  // const decreaseCount = () => {\r\n  //   if (count > 0) {\r\n  //     setCount(count - 1);\r\n  //   } else {\r\n  //     Alert.alert(\"Enough ðŸ›‘\", \"Counter has reached minimum limit.\");\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <TouchableOpacity\r\n        activeOpacity={0.8}\r\n        onLongPress={() => dispatch({ type: \"go_to_max\" })}\r\n        onPress={() => dispatch({ type: \"add\" })}\r\n      >\r\n        <AntDesign name=\"pluscircle\" size={100} color=\"#333\" />\r\n      </TouchableOpacity>\r\n      <Text style={styles.count}> {count} </Text>\r\n      <TouchableOpacity\r\n        onLongPress={() => dispatch({ type: \"go_to_min\" })}\r\n        activeOpacity={0.8}\r\n        onPress={() => dispatch({ type: \"subtract\" })}\r\n      >\r\n        <AntDesign name=\"minuscircle\" size={100} color=\"#333\" />\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#F5F5F5\",\r\n  },\r\n  count: {\r\n    fontSize: 150,\r\n    color: \"#000\",\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 50,\r\n      height: 50,\r\n    },\r\n    shadowOpacity: 0.5,\r\n    shadowRadius: 3.84,\r\n    elevation: 10,\r\n    margin: 50,\r\n    textShadowColor: \"#222\",\r\n    textShadowOffset: {\r\n      width: 5,\r\n      height: 5,\r\n    },\r\n    textShadowRadius: 10,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}