{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\rn-starter\\\\src\\\\screens\\\\ColorScreen.js\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { TouchableNativeFeedback, ScrollView, FlatList } from \"react-native-gesture-handler\";\nexport default function ColorScreen() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      colors = _useState2[0],\n      SetColors = _useState2[1];\n\n  var randomRGB = function randomRGB() {\n    var red = Math.floor(Math.random() * 255);\n    var blue = Math.floor(Math.random() * 255);\n    var green = Math.floor(Math.random() * 255);\n    return \"rgb(\" + red + \", \" + blue + \" , \" + green + \")\";\n  };\n\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, React.createElement(Button, {\n    title: \"Add Color\",\n    onPress: function onPress() {\n      SetColors([].concat(_toConsumableArray(colors), [randomRGB()]));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }), React.createElement(FlatList, {\n    data: colors,\n    keyExtractor: function keyExtractor(item) {\n      return item;\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: {\n          height: 25,\n          width: '100%',\n          backgroundColor: item\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 20\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    height: \"100%\",\n    width: \"100%\",\n    overflow: \"scroll\"\n  }\n});","map":{"version":3,"sources":["C:/rn-starter/src/screens/ColorScreen.js"],"names":["React","useState","TouchableNativeFeedback","ScrollView","FlatList","ColorScreen","colors","SetColors","randomRGB","red","Math","floor","random","blue","green","item","height","width","backgroundColor","styles","StyleSheet","create","container","overflow"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;AAEA,SACEC,uBADF,EAEEC,UAFF,EAGEC,QAHF,QAIO,8BAJP;AAMA,eAAe,SAASC,WAAT,GAAuB;AAAA,kBACRJ,QAAQ,CAAC,EAAD,CADA;AAAA;AAAA,MAC7BK,MAD6B;AAAA,MACrBC,SADqB;;AAGpC,MAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,QAAMC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAZ;AACA,QAAMC,IAAI,GAAGH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAb;AACA,QAAME,KAAK,GAAGJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAd;AAEA,oBAAcH,GAAd,UAAsBI,IAAtB,WAAgCC,KAAhC;AACD,GAND;;AAQA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,WADR;AAEE,IAAA,OAAO,EAAE,mBAAM;AACbP,MAAAA,SAAS,8BAAKD,MAAL,IAAaE,SAAS,EAAtB,GAAT;AAED,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEF,MADR;AAEE,IAAA,YAAY,EAAE,sBAACS,IAAD;AAAA,aAAUA,IAAV;AAAA,KAFhB;AAGE,IAAA,UAAU,EAAE,0BAAY;AAAA,UAAVA,IAAU,QAAVA,IAAU;AACrB,aAAQ,oBAAC,IAAD;AACT,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE,EAAV;AAAcC,UAAAA,KAAK,EAAE,MAArB;AAA6BC,UAAAA,eAAe,EAAEH;AAA9C,SADE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;AAGF,KAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF;AAsBD;AAED,IAAMI,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTN,IAAAA,MAAM,EAAE,MADC;AAETC,IAAAA,KAAK,EAAE,MAFE;AAGTM,IAAAA,QAAQ,EAAE;AAHD;AADoB,CAAlB,CAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { StyleSheet, Text, View, Button } from \"react-native\";\r\nimport {\r\n  TouchableNativeFeedback,\r\n  ScrollView,\r\n  FlatList,\r\n} from \"react-native-gesture-handler\";\r\n\r\nexport default function ColorScreen() {\r\n  const [colors, SetColors] = useState([]);\r\n\r\n  const randomRGB = () => {\r\n    const red = Math.floor(Math.random() * 255);\r\n    const blue = Math.floor(Math.random() * 255);\r\n    const green = Math.floor(Math.random() * 255);\r\n\r\n    return `rgb(${red}, ${blue} , ${green})`;\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      <Button\r\n        title=\"Add Color\"\r\n        onPress={() => {\r\n          SetColors([...colors, randomRGB()]);\r\n        //   alert(colors);\r\n        }}\r\n      />\r\n      <FlatList \r\n        data={colors}\r\n        keyExtractor={(item) => item}\r\n        renderItem={({item}) => {\r\n           return (<View\r\n          style={{ height: 25, width: '100%', backgroundColor: item }}\r\n        ></View>);\r\n        }}\r\n      >\r\n        \r\n      </FlatList>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    overflow: \"scroll\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}